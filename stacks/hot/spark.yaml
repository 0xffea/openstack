heat_template_version: 2016-04-08

description: >
  This is a mesos cluster with spark running on it.

parameters:
  key_name:
    type: string
    default: heat_key

  image:
    type: string
    default: ubuntu-trusty-cloudimg

  flavor:
    type: string
    default: m1.heat

  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
    default: private

  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
    default: private-subnet

# what does depends_on? http wait condition?

resources:
  mesos_master:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      user_data_format: RAW
      user_data: { get_file: mesos_master_install.sh }

  mesos_agent:
    type: OS::Nova::Server
    depends_on: mesos_master
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: mesos_agent_install.sh }
          params:
            $param_mesos_master_ip: { get_attr: [mesos_master, networks, private, 1] }

  mesos_master_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security group for this cluster
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 5050
          port_range_max: 5050
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

  floating_ip:
    type: OS::Nova::FloatingIP

  floating_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: {get_resource: floating_ip}
      server_id: {get_resource: mesos_master}

  mesos_master_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: [{ get_resource: mesos_master_security_group }]

outputs:
  mesos_master_private_ip:
    description: IP address of mesos_master in private network
    value: { get_attr: [mesos_master, networks, private, 1] }
